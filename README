# Documentation Project Zahlenschloss 
## 1. Contributors
- Kai Kustermann (kk147)
- Hannes Frey (hf018)
## 2. Description
The project implements a safe using an ATmega328P as microcontroller, a 4x4 matrix keypad to capture user input and an LCD display as output to display important information about the state of the system. Two LEDs are used to indicate if the safe is open or closed. A DC locking bolt acts as mechanic mechanism for closing and opening the lock, which operates using a mosfet. Optionally a buzzer can be added to give auditory feedback to the user.

(TODO: Hier bild von safe einf√ºgen)
## 3. Setup
### 3.1. Hardware 
#### 3.1.1 Circuit Diagram
#### 3.1.2 Chassis and 3D Printing
### 3.2. Software

## 4. Deployment
## 5. Code Structure
## 6. Operation Manuals

1. Download avr-gcc  and avrdude

2. Adjust c_cpp_properties.json vs code settings

e.g. for windows

```json
{
    "configurations": [
        {
            "name": "Mac",
            "includePath": [
                "${workspaceFolder}/**",
                "C:\\Users\\Kaiku\\Downloads\\avr8-gnu-toolchain-3.7.0.1796-win32.any.x86_64\\avr8-gnu-toolchain-win32_x86_64\\avr",
            ],
            "defines": [
                "__AVR_ATmega328P__",
                "F_CPU=16000000UL"
            ],
            "macFrameworkPath": [],
            "compilerPath": "C:\\Users\\Kaiku\\Downloads\\avr8-gnu-toolchain-3.7.0.1796-win32.any.x86_64\\avr8-gnu-toolchain-win32_x86_64\\bin\\avr-gcc -xc -E -v -",
            "cStandard": "c11",
            "cppStandard": "gnu++14",
            "intelliSenseMode": "clang-x64"
        }
    ],
    "version": 4
}
```

3. Adjust makefile (especially PROGRAMMER_PORT, Windows: COM3)

4. On Windows: Download make and add to path

5. For logging use PUTTY or something similar and open a terminal to you serial port.

    5.1 Altenatively on linux, you can use the `screen` command to simply recieve serial data. The syntax is as follows: `screen [DEVICE NAME] [BAUDRATE]` , where the baudrate for the atmega328 is 9600.